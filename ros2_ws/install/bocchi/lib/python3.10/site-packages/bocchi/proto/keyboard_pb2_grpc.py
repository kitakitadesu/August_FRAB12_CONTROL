# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from bocchi.proto import keyboard_pb2 as keyboard__pb2


class KeyboardServiceStub(object):
  """The keyboard service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendKey = channel.unary_unary(
        '/keyboard.KeyboardService/SendKey',
        request_serializer=keyboard__pb2.KeyRequest.SerializeToString,
        response_deserializer=keyboard__pb2.KeyResponse.FromString,
        )
    self.StreamKeys = channel.stream_stream(
        '/keyboard.KeyboardService/StreamKeys',
        request_serializer=keyboard__pb2.KeyRequest.SerializeToString,
        response_deserializer=keyboard__pb2.KeyResponse.FromString,
        )
    self.GetStatus = channel.unary_unary(
        '/keyboard.KeyboardService/GetStatus',
        request_serializer=keyboard__pb2.StatusRequest.SerializeToString,
        response_deserializer=keyboard__pb2.StatusResponse.FromString,
        )


class KeyboardServiceServicer(object):
  """The keyboard service definition
  """

  def SendKey(self, request, context):
    """Sends a key press to the ROS2 publisher
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamKeys(self, request_iterator, context):
    """Stream key presses (bidirectional streaming)
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetStatus(self, request, context):
    """Get server status
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_KeyboardServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendKey': grpc.unary_unary_rpc_method_handler(
          servicer.SendKey,
          request_deserializer=keyboard__pb2.KeyRequest.FromString,
          response_serializer=keyboard__pb2.KeyResponse.SerializeToString,
      ),
      'StreamKeys': grpc.stream_stream_rpc_method_handler(
          servicer.StreamKeys,
          request_deserializer=keyboard__pb2.KeyRequest.FromString,
          response_serializer=keyboard__pb2.KeyResponse.SerializeToString,
      ),
      'GetStatus': grpc.unary_unary_rpc_method_handler(
          servicer.GetStatus,
          request_deserializer=keyboard__pb2.StatusRequest.FromString,
          response_serializer=keyboard__pb2.StatusResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'keyboard.KeyboardService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
